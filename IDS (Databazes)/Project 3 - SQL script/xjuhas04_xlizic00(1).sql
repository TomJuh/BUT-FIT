--------------  autors  --------------
-------------  xjuhas04  -------------
-------------  xlizic00  -------------
--------------------------------------
----------   DROP TABLES    ----------
DROP TABLE zamestnanec CASCADE CONSTRAINTS;
DROP TABLE zakaznik CASCADE CONSTRAINTS;
DROP TABLE rezervacia CASCADE CONSTRAINTS;
DROP TABLE pobyt CASCADE CONSTRAINTS;
DROP TABLE izba CASCADE CONSTRAINTS;
DROP TABLE sluzby CASCADE CONSTRAINTS;
DROP TABLE zaplatil CASCADE CONSTRAINTS;
DROP TABLE firma CASCADE CONSTRAINTS;
DROP TABLE fyzicka_osoba CASCADE CONSTRAINTS;
--------------------------------------
--------       TABLES       ----------
CREATE TABLE izba(
    cislo_izby NUMBER PRIMARY KEY,
    pocet_posteli NUMBER NOT NULL,
    popis VARCHAR(1024) NOT NULL,
    cena NUMBER NOT NULL,
    CHECK (cena >= 0)
);

CREATE TABLE pobyt(
	id_pobytu NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    datum_zaciatku DATE NOT NULL,
    datum_koncu DATE NOT NULL,
    datum_prichodu DATE NOT NULL,
    datum_odchodu DATE NOT NULL,
    id_izby NUMBER NOT NULL,
    CONSTRAINT pokoj_pobyt_id_fk
        FOREIGN KEY (id_izby) REFERENCES izba (cislo_izby)
        ON DELETE CASCADE,
    CHECK (datum_zaciatku <= datum_koncu),
    CHECK (datum_prichodu <= datum_odchodu)
);

CREATE TABLE sluzby(
	id_sluzby NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cena NUMBER NOT NULL,
    popis VARCHAR(1024) NOT NULL,
    id_pobytu NUMBER,
    CONSTRAINT pobyt_sluzby_id_fk
        FOREIGN KEY (id_pobytu) REFERENCES pobyt (id_pobytu)
        ON DELETE CASCADE,
    CHECK (cena >= 0)

);


CREATE TABLE zamestnanec(
	rodne_cislo NUMBER PRIMARY KEY,
	meno VARCHAR(50) NOT NULL,
    priezvisko VARCHAR(50) NOT NULL,
    pozicia VARCHAR(50) NOT NULL,
    id_pobytu NUMBER NOT NULL,
    id_sluzby NUMBER NOT NULL,
    CONSTRAINT pobyt_zamestnanec_id_fk
        FOREIGN KEY (id_pobytu) REFERENCES pobyt (id_pobytu)
        ON DELETE CASCADE,
    CONSTRAINT sluzby_zamestnanec_id_fk
        FOREIGN KEY (id_sluzby) REFERENCES sluzby (id_sluzby)
        ON DELETE CASCADE,
    CHECK (pozicia IN ('Recepcny', 'Manazer', 'Upratovacka', 'Kuchar', 'Vratnik', 'Kontrolor'))
);

CREATE TABLE rezervacia(
	id_rezervacie NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	datum_rezervacie DATE NOT NULL,
    stav VARCHAR(255) NOT NULL,
    id_pobytu NUMBER NOT NULL,
    CONSTRAINT pobyt_rezervacia_id_fk
        FOREIGN KEY (id_pobytu) REFERENCES pobyt (id_pobytu)
        ON DELETE CASCADE,
    CHECK (stav IN ('Zrusena', 'Potvrdena', 'Nepotvrdena', 'Zaplatena', 'Nezaplatena'))
);

CREATE TABLE zakaznik(
    id_zakaznika NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    telefonne_cislo INTEGER NOT NULL,
    email VARCHAR (255) NOT NULL,
    id_rezervacie NUMBER,
    CONSTRAINT rezervacia_zakaznik_id_fk
        FOREIGN KEY (id_rezervacie) REFERENCES rezervacia (id_rezervacie)
        ON DELETE CASCADE,
    CHECK (telefonne_cislo > 0),
    CHECK (email LIKE '%@%')

);

CREATE TABLE firma(
    id_zakaznika NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	nazov VARCHAR(50) NOT NULL,
	dci INTEGER NOT NULL,
    ico INTEGER NOT NULL,
    CONSTRAINT FK_FIRMA FOREIGN KEY (id_zakaznika) REFERENCES zakaznik (id_zakaznika),
    CHECK (dci > 0),
    CHECK (ico > 0)
);

CREATE TABLE fyzicka_osoba(
    id_zakaznika NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	cislo_obcianskeho NUMBER,
	meno VARCHAR(50) NOT NULL,
    priezvisko VARCHAR(50) NOT NULL,
    CONSTRAINT FK_FYZ_OS FOREIGN KEY (id_zakaznika) REFERENCES zakaznik (id_zakaznika),
    CHECK (cislo_obcianskeho > 0)
);

CREATE TABLE zaplatil(
    id_platby NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    suma NUMBER NOT NULL,
    datum_platby DATE NOT NULL,
    id_pobytu NUMBER NOT NULL,
    id_zakaznika NUMBER NOT NULL,
    CONSTRAINT pobyt_zaplatil_id_fk
        FOREIGN KEY (id_pobytu) REFERENCES pobyt (id_pobytu)
        ON DELETE CASCADE,
    CONSTRAINT zakaznik_zaplatil_id_fk
        FOREIGN KEY (id_zakaznika) REFERENCES zakaznik (id_zakaznika)
        ON DELETE CASCADE,
    CHECK (suma >= 0)
);
--------------------------------------
---------  Insert Values    ----------


------ Pokoj/ cislo_pokoje, cislo posteli, popis, cena
INSERT INTO izba VALUES('102', '2', 'Izba: dvojpostelova, Kupelna: ano, Toaletne potreby: ano, Wi-fi: ano, Satelitn? telev?zia: ano', '100');
INSERT INTO izba VALUES('103', '1', 'Izba: jednopostelova, Kupelna: ano, Toaletne potreby: ano, Wi-fi: nie, Satelitn? telev?zia: ano', '70');

------ Pobyt /id_pobytu, datum zaciatku, datum konca, datum prichodu, datum odchodu, id_pokoje
INSERT INTO pobyt VALUES('1', DATE '2022-10-10', DATE '2022-10-11', DATE '2022-10-11', DATE '2022-11-10', '103');
INSERT INTO pobyt VALUES('2', DATE '2023-11-10', DATE '2023-12-10',DATE'2023-11-11',DATE '2023-12-10','102');
INSERT INTO pobyt VALUES('3', DATE '2023-11-10', DATE '2023-12-10',DATE'2023-11-11',DATE '2023-12-10','102');
INSERT INTO pobyt VALUES('4', DATE '2023-11-10', DATE '2023-12-10',DATE'2023-11-11',DATE '2023-12-10','102');

------ Sluzby/ id_sluzby, cena, popis, id_pobytu
INSERT INTO sluzby VALUES('1', '25', 'vecera na izbu', '1');
INSERT INTO sluzby VALUES('2', '5', 'vycistenie bielizne', '2');
INSERT INTO sluzby VALUES('3', '5', 'Donaska alkoholu', '3');

------ Rezervacia/ id rezervacie, datum rezervacie, stav, id_pobytu
INSERT INTO rezervacia VALUES('1', DATE '2022-10-12', 'Nezaplatena', '1');
INSERT INTO rezervacia VALUES('2', DATE '2022-11-12', 'Zaplatena', '2');

------ Zamestnanec / rodne cislo, meno, priezvisko, pozicia, id_pobytu, id_sluzby
INSERT INTO zamestnanec VALUES('1362479712','Daniel', 'Kokos', 'Manazer', '1', '1');
INSERT INTO zamestnanec VALUES('4424093843','Erik', 'Molnar', 'Vratnik', '2', '2');
INSERT INTO zamestnanec VALUES('8762147612','Laura', 'Spackova', 'Upratovacka', '2' , '3');

------ Zakaznik / cislo obcianskeho, meno, priezvisko, telefonne cislo, email, id_rezervacie
INSERT INTO zakaznik VALUES('21','420488333888', 'robkoka@gmail.com', NULL);
INSERT INTO zakaznik VALUES('33','421464333098', 'dominikN@gmail.com', '1');
INSERT INTO zakaznik VALUES( '15','420488123764', 'ErikG@gmail.com', '2');

------ Zakaznik / cislo obcianskeho, meno, priezvisko, telefonne cislo, email, id_rezervacie
INSERT INTO zakaznik VALUES('05','420488333888', 'Erma@gmail.com', NULL);
INSERT INTO zakaznik VALUES('09','422264333098', 'Create@gmail.com', NULL);
INSERT INTO zakaznik VALUES( '11','423488123764', 'Company@gmail.com', NULL);

------ Firma / id_zakaznika ,nazov, dci, ico, telefonne cislo, email, id_rezervacie
INSERT INTO firma VALUES('05','Erma s.r.o', '27082440', '27082440' );
INSERT INTO firma VALUES('09','Company corp', '27082440', '37042440');
INSERT INTO firma VALUES('11','CreativeNames inc', '27082440', '12082440');

------ Fyzicka osoba / cislo obcianskeho, meno, priezvisko, telefonne cislo, email, id_rezervacie
INSERT INTO fyzicka_osoba VALUES('21','324897129', 'Robert', 'Kalinak');
INSERT INTO fyzicka_osoba VALUES('33','984897129', 'Dominik', 'Nemcov');
INSERT INTO fyzicka_osoba VALUES('15','994897129', 'Erika', 'Gocikova');

------ Zaplatil/ id_platby, suma, datum platby, id_pobytu, rodne cislo zakaznika
INSERT INTO zaplatil VALUES ('1','300', DATE '2022-11-10','1', '05');
INSERT INTO zaplatil VALUES ('2','400', DATE '2023-11-10', '2' , '11');
INSERT INTO zaplatil VALUES ('3','400', DATE '2024-11-10', '3' , '15');


--------------------------------------
---------  Select Values    ----------

-- Má zaplatenú rezerváciu zákazník s mailovou adresou dominikN@gmail.com?
-- (Spojenie dvoch tabuliek)
SELECT stav FROM rezervacia
JOIN zakaznik ON rezervacia.id_rezervacie = zakaznik.id_rezervacie
WHERE zakaznik.email = 'dominikN@gmail.com';

-- Koľko postelí je v pobyte č. 3?
-- (Spojenie dvoch tabuliek)
SELECT pocet_posteli FROM izba
JOIN pobyt ON pobyt.id_izby = izba.cislo_izby
WHERE pobyt.id_pobytu = '3';

-- Kedy začína pobyt zákazníkovy, ktorý volá z telefónneho čísla 420488123764?
-- (Spojenie troch tabuliek)
SELECT datum_zaciatku, datum_koncu FROM pobyt
JOIN rezervacia ON pobyt.id_pobytu = rezervacia.id_pobytu
JOIN zakaznik ON zakaznik.id_rezervacie = rezervacia.id_rezervacie
WHERE zakaznik.telefonne_cislo = '420488123764';

-- Vypíše počet pobytov a zarobenú sumu v každej izbe
-- (Dotazy s klauzulí GROUP BY a agregační funkcí)
SELECT izba.cislo_izby, COUNT(id_pobytu) AS pocet_pobytov , SUM(izba.cena) AS zisk_za_vsetky_pobyty FROM izba
JOIN pobyt ON pobyt.id_izby = izba.cislo_izby
GROUP BY izba.cislo_izby
ORDER BY izba.cislo_izby;

-- Vypíše, koľko každý zákazník už zaplatil od začiatku hotela za izby
-- (Dotazy s klauzulí GROUP BY a agregační funkcí)
SELECT zakaznik.email as email, SUM(zaplatil.suma) AS doteraz_zaplatil FROM zakaznik
JOIN zaplatil ON zaplatil.id_zakaznika = zakaznik.id_zakaznika
GROUP BY email;

-- Vráti id pobytov (a ich dátumy), pri ktorých platí, že cena za izbu je menšia ako 100
-- (Dotaz obsahující predikát EXISTS)
SELECT id_pobytu, datum_zaciatku, datum_koncu FROM pobyt
WHERE EXISTS
(SELECT * FROM izba WHERE izba.cena < '100' AND izba.cislo_izby = pobyt.id_izby);

-- Vráti všetky dáta pobytov, ktorých rezervácia je už zaplatená.
-- (Dotaz s predikátem IN s vnořeným selectem (nikoliv IN s množinou konstantních dat))
SELECT * FROM pobyt
WHERE id_pobytu IN (SELECT id_pobytu FROM rezervacia WHERE stav='zaplatena');
